#!/usr/bin/perl
use strict;
use warnings;
use Env;
use Getopt::Std;

my %options = ();
getopts("k:v:", \%options);
my $key = "";
my $varlist = "";
$key = $options{k} if exists $options{k};
die "usage: fred_plot -k key -v [S|E|I|R|s|M]\n" if not $key;
$varlist = $options{v} if exists $options{v};
die "usage: fred_plot -k key -v [S|E|I|R|s|M]\n" if not $varlist;
my @args = check_varlist($varlist);

my $FRED = $ENV{FRED_HOME};
die "Please set environmental variable FRED_HOME to location of FRED source directory\n" if not $FRED;
my $bindir = "$FRED/bin";
my $id = `$bindir/fred_id $key`;
chomp $id;
die "fred_plot: UNKNOWN key: $key\n" if $id eq "UNKNOWN";

die "fred_plot can't find gnuplot\n" if not -e "/usr/local/bin/gnuplot";

my $status = `$bindir/fred_status -k $key`;
chomp $status;
$status =~ s/\s.*//;
die "fred_plot: bad status: $status\n" if $status ne "FINISHED";

my $reportsdir = "$FRED/RESULTS/RUN/$id/DATA/REPORTS";
my $outdir = "$FRED/RESULTS/RUN/$id/DATA/OUT";

chdir $reportsdir or die "Can't find REPORTS directory: $reportsdir\n";

my $pltfile = "sim-$key-$$.plt";
my $pngfile = "report-$key-$$.png";
open FH, ">$pltfile";
print FH <<"EOF";
set title \"FRED: Allegheny County Model\"
set terminal png font \"Arial\" 12
set output \"$pngfile\"
set grid
set yrange [0:*]
set xrange [0:*]
set xlabel \"Days\"
set ylabel \"Individuals\" rotate by 90
EOF

my $n = 0;
for my $x (@args) {
  my $title;
  $title = "Susceptible" if $x eq "S";
  $title = "Exposed" if $x eq "E";
  $title = "Infectious" if $x eq "I";
  $title = "Recovered" if $x eq "R";
  $title = "Symptomatic" if $x eq "I_s";
  $title = "Immune" if $x eq "M";
  print FH ($n == 0)? "plot " : ",\\\n";
  $n++;
  print FH "\"$x.dat\" using  1:2 title \"$title\" with lines lw 3 lt $n, \\\n";
  print FH "\"\" using 1:2:3 notitle with errorbars lw 1 lt $n";
}
print FH "\n";
close FH;
system "/usr/local/bin/gnuplot $pltfile";
print "$reportsdir/$pngfile\n";
exit;


sub check_varlist {
  my $v = shift;
  my @args = ();
  my %mapping = (S=>'S', E=>'E', I=>'I', R=>'R', s=>'I_s', M=>'M');
  my @vars = split "", $v;
  for my $x (@vars) {
    if (exists $mapping{$x}) {
      push @args, $mapping{$x};
    }
    else {
      print "bad arg: |$x|\n";
      die "usage: fred_plot -k key -v [S|E|I|R|s|M|A]\n";
    }
  }
  return @args;
}

