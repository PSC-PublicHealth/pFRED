#!/usr/bin/perl
use strict;
use warnings;
use Env;
use Getopt::Long qw(:config no_ignore_case bundling);

my %titles = ( AR => "Attack Rate",
	       C => "Cases",
	       CAR => "Clinical Attack Rate",
	       CI => "Clinical Incidents",
	       Cls => "Classroom Transmissions",
	       E => "Exposed",
	       H => "Household Transmissions",
	       I => "Infectious",
	       I_s => "Symptomatics",
	       M => "Immune",
	       N => "Pop Size",
	       Off => "Office Transmissions",
	       R => "Recovered",
	       RR => "Reproductive Rate",
	       S => "Susceptible",
	       Sch => "School Transmissions",
	       SM => "Seasonality Mult",
	       Wrk => "Workplace Transmissions",
	       X => "Imported Transmissions",
	       small => "Presenteeism at Small Workplaces",
	       med => "Presenteeism at Medium Workplaces",
	       large => "Presenteeism at Large Workplaces",
	       xlarge => "Presenteeism at Xlarge Workplaces",
);

my @keys = ();
my @varlist = ();
my $year = "0";
my $xmin = "0";
my $xmax = "*";
my $ymin = "0";
my $ymax = "*";
my $errorbars;
my $nameonly;
my $dataonly;
my $cleanup;
my $title = "FRED: Allegheny County Model";
# my $fontsize = "giant";
# my $fontsize = "large";
my $fontsize = "medium";
my $opt_result = GetOptions("e" => \$errorbars,
			    "clean" => \$cleanup,
			    "name" => \$nameonly,
			    "data" => \$dataonly,
			    "f=s" => \$fontsize,
			    "k=s" => \@keys,
			    "v=s" => \@varlist,
			    "a=i" => \$year,
			    "x=i" => \$xmin,
			    "X=i" => \$xmax,
			    "y=i" => \$ymin,
			    "Y=i" => \$ymax,
			    "T=s" => \$title);

my $usage = "usage: fred_plot -k key [-k key ...] -v [-a start_year|-e|-f fontsize|-x xmin|-y ymin|-X xmax|-Y ymax|-T title]\n";

die $usage if not @keys;
die $usage if not @varlist;

my $FRED = $ENV{FRED_HOME};
die "Please set environmental variable FRED_HOME to location of FRED home directory\n" if not $FRED;

my $gnuplot = $ENV{FRED_GNUPLOT};
die "no gnuplot\n" if (not $gnuplot or (not -x $gnuplot));

my $pltfile = "fred_plot-$$.plt";
my $pngfile = "fred_plot-$$.png";

for my $v (@varlist) {
  for my $key (@keys) {
    my $datafile = "fred_plot_data.key=$key-var=$v-$$";
    get_data($key, $v, $datafile);
    if ($dataonly) {
      system "cat $datafile";
      cleanup();
      exit;
    }
  }
}

my $n = 0;
open FH, ">$pltfile";
print FH <<"EOF";
set title \"$title\"
set terminal png $fontsize
set output \"$pngfile\"
# set terminal aqua font \"Arial,20\"
set grid
set yrange [0:*]
set xrange [0:*]
set xlabel \"Days\" offset 0,0.5
set ylabel \"Individuals\" offset 1.2,0
EOF
for my $v (@varlist) {
  my $titlevar = $v;
  $titlevar = $titles{$v} if exists $titles{$v};
  for my $key (@keys) {
    my $ptitle = "$titlevar";
    $ptitle = "$ptitle-$key" if scalar @keys > 1;
    print FH ($n == 0)? "plot " : ",\\\n";
    $n++;
    my $datafile = "fred_plot_data.key=$key-var=$v-$$";
    if ($year) {
      print FH "\"$datafile\" using ($year + (\$1/365)):2:3 notitle with errorbars lw 1 lt $n, \\\n" if $errorbars;
      print FH "\"$datafile\" using  ($year + (\$1/365)):2 title \"$ptitle\" with lines lw 3 lt $n";
    }
    else {
      print FH "\"$datafile\" using 1:2:3 notitle with errorbars lw 1 lt $n, \\\n" if $errorbars;
      print FH "\"$datafile\" using  1:2 title \"$ptitle\" with lines lw 3 lt $n";
    }
  }
}
print FH "\n";
close FH;
system ($gnuplot,$pltfile);
if ($nameonly) {
  print "$pngfile\n";
}
else {
  system ("open $pngfile");
}
cleanup();
exit;

sub get_data {
  my ($key, $v, $file) = @_;

  my $bindir = "$FRED/bin";
  my $id = `$bindir/fred_id $key`;
  chomp $id;
  die "fred_plot: UNKNOWN key: $key\n" if $id eq "UNKNOWN";

  my $status = `$bindir/fred_status -k $key`;
  chomp $status;
  $status =~ s/\s.*//;
  die "fred_plot bad status: $status\n" if $status ne "FINISHED";

  my $FREDRESULTS = $ENV{FRED_RESULTS};
  $FREDRESULTS = $ENV{FRED_HOME} if not $FREDRESULTS;
  my $reportsdir = "$FREDRESULTS/RESULTS/JOB/$id/DATA/REPORTS";
  system "cat $reportsdir/$v.dat > $file";
}


sub cleanup {
  if ($cleanup) {
    sleep 5;
    unlink $pngfile if -e $pngfile;
    unlink $pltfile if -e $pltfile;
  }
  for my $v (@varlist) {
    for my $key (@keys) {
      my $datafile = "fred_plot_data.key=$key-var=$v-$$";
      unlink $datafile if -e $datafile;
    }
  }
}
