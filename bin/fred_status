#!/usr/bin/perl
use strict;
use warnings;
use Env;
use Getopt::Std;

my %options = ();
getopts("k:s:", \%options);
my $mykey = "";
my $secs = "";
$mykey = $options{k} if exists $options{k};
die "usage: fred_status -k key [-s secs]\n" if not $mykey;
$secs = $options{s} if exists $options{s};

my $FRED = $ENV{FRED_HOME};
die "Please set environmental variable FRED_HOME to location of FRED source directory\n" if not $FRED;

my $dir = "$FRED/RESULTS";
die "Can't find directory $dir\n" if not -d $dir;

my $id = get_id($mykey);
die "NOT_FOUND\n" if $id eq "";

my $status = `cat $dir/RUN/$id/META/STATUS`;
chomp $status;
$status .= " " . `date`;
print $status;

if (defined $secs and $secs =~ /^\d+$/) {
  while ($status !~ /FINISHED/ and $status !~ /NOT_FOUND/) {
    sleep $secs;
    $status = `cat $dir/RUN/$id/META/STATUS`;
    chomp $status;
    $status .= " " . `date`;
    print $status;
  }
}
exit;

sub get_id {
  my $mykey = shift;
  open FH, "$dir/KEY" or die "Can't find $dir/KEY\n";
  while (<FH>) {
    chomp;
    my ($key, $id) = split;
    if (defined $key and $key eq $mykey) {
      close FH;
      return $id;
    }
  }
  close FH;
  return "";
}
