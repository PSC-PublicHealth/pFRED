#!/usr/bin/perl
use strict;
use warnings;
use Getopt::Long qw(:config no_ignore_case bundling);
$| = 1;

my $runs = 100;
my $cores = 10;
my $dir = `pwd`;
$dir = `basename $dir`;
chomp $dir;
my $oldparams = "";
my $usage = "usage: $0 -p oldparams [ -h | -r runs | -m cores ]\n";
my $help = "";
my $opt_result = GetOptions(
			    "h" => \$help,
			    "p=s" => \$oldparams,
			    "r=i" => \$runs,
			    "m=i" => \$cores
);
die $usage if $help;
die $usage if not $oldparams;

open FH, ">R0.txt";
for (my $tr = 0.5; $tr <= 6.0; $tr += 0.5) {
  $tr = sprintf "%.1f", $tr;
  my $label = "get_coeff-$dir-tr=$tr";
  my $params = "params.$label";
  system "cp $oldparams $params";
  system "ch 'trans[0]' $tr $params";
  system "ch days 11 $params";
  system "ch track_infection_events 0 $params";
  system "date";
  system "fred_delete -f -k $label";
  system "fred_job -p $params -k $label -n $runs -m $cores";
  system "date";
  my $r0 = `fred_R0 $label 10`;
  chomp $r0;
  print FH "$tr $r0\n";
  system "fred_delete -f -k $label";
  unlink $params;
}
close FH;

open PLT, ">R0.plt" or die "Can't write file R0.plt\n";
my $date = scalar localtime();
print PLT <<EOF;
# set term aqua font 'Arial Bold, 18'
# set terminal png medium
set output 'R0.png'
set term png font 'Arial Bold, 18'
set title 'R0 vs trans\\n$runs runs with 100 seeds'
set ylabel 'R0' offset character 2,0
set xlabel 'Trans' offset character 0,1.5
set ytics nomirror 1 out offset character 0.5,0
set xtics nomirror 1 out offset character 0,0.5
set grid
set xrange [0.5:6.25]
set yrange [0:*]
set key bottom right
f(x) = a*x*x + b*x
g(x) = c*x*x + d*x
fit f(x) 'R0.txt' us 1:2 via a, b
fit g(x) 'R0.txt' us 2:1 via c, d
set label 'generated on $date' at 0.25,-0.75 left font 'Arial,11'
set label sprintf(\"R0 = %f*trans - %f*trans^2\\ntrans = %f*R0 + %f*R0^2\", b, -a, d, c) at 0.75,5.5
plot 'R0.txt' us 1:2 title "R0" wi linespo pt 5 ps 1.5 lw 3, '' using 1:2:3 notitle wi err lt 1 lw 1, '' us 1:(a*\$1*\$1 + b*\$1) title 'Fit' with li lt -1 lw 3
EOF
close PLT;

# plot the above file and compute quadratic fit parameters
system "gnuplot R0.plt >& gnuplot.out";

# edit params file to include quadratic fit parameters
my $c = `grep 'c *=' gnuplot.out | tail -1 | awk '{print \$3}'`;
chomp $c;
my $d = `grep 'd *=' gnuplot.out | tail -1 | awk '{print \$3}'`;
chomp $d;
print "d = $d c = $c\n";
system "ch R0_a $c $oldparams";
system "ch R0_b $d $oldparams";

# run test of specifying input R0
open FH, ">R0-test.txt";
for (my $r = 1.0; $r <= 2.5; $r += 0.1) {
  $r = sprintf "%.1f", $r;
  my $label = "get_coeff-$dir-R0=$r";
  my $params = "params.$label";
  system "cp $oldparams $params";
  system "ch 'R0' $r $params";
  system "ch days 11 $params";
  system "ch track_infection_events 0 $params";
  system "date";
  system "fred_delete -f -k $label";
  system "fred_job -p $params -k $label -n $runs -m $cores";
  system "date";
  my $r0 = `fred_R0 $label 10`;
  chomp $r0;
  print FH "$r $r0\n";
  system "fred_delete -f -k $label";
  unlink $params;
}
for (my $r = 3.0; $r <= 10.0; $r += 1.0) {
  $r = sprintf "%.1f", $r;
  my $label = "get_coeff-$dir-R0=$r";
  my $params = "params.$label";
  system "cp $oldparams $params";
  system "ch 'R0' $r $params";
  system "ch days 11 $params";
  system "ch track_infection_events 0 $params";
  system "date";
  system "fred_delete -f -k $label";
  system "fred_job -p $params -k $label -n $runs -m $cores";
  system "date";
  my $r0 = `fred_R0 $label 10`;
  chomp $r0;
  print FH "$r $r0\n";
  system "fred_delete -f -k $label";
  unlink $params;
}
close FH;

# plot the output form the test and see if it is linear
open PLT, ">R0-test.plt";
print PLT <<EOF;
set output 'R0-test.png'
set term png font 'Arial Bold, 18'
set title "R0 Input Test: $runs runs"
set ylabel "R0 Observed" offset character 2,0
set xlabel "R0 Input" offset character 0,1.5
set ytics nomirror 1 out offset character 0.5,0
set xtics nomirror 1 out offset character 0,0.5
set grid
set xrange [0:*]
set yrange [0:*]
set key bottom right
set label "generated on $date" at 0,-1.75 left font "Arial,11"
plot 'R0-test.txt' us 1:2 notitle wi lines lt 1 lw 3, '' using 1:2:3 notitle wi err lt 1 lw 1, '' us 1:1 notitle with li lt -1 lw 3
EOF
close PLT;
system "gnuplot R0-test.plt";
exit;

