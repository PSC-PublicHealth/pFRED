#!/usr/bin/perl
use strict;
use warnings;
use Env;
use Getopt::Std;

my %options = ();
getopts("k:v:", \%options);
my $key = "";
my $varlist = "";
$key = $options{k} if exists $options{k};
die "usage: fred_plot_data -k key -v [S|E|I|R|s|C|c|M|A|r|m]\n" if not $key;
$varlist = $options{v} if exists $options{v};
die "usage: fred_plot_data -k key -v [S|E|I|R|s|C|c|M|A|r|m]\n" if not $varlist;
my ($x) = check_varlist($varlist);

my $FRED = $ENV{FRED_HOME};
die "Please set environmental variable FRED_HOME to location of FRED home directory\n" if not $FRED;
my $bindir = "$FRED/bin";
my $id = `$bindir/fred_id $key`;
chomp $id;
die "fred_plot_data: UNKNOWN key: $key\n" if $id eq "UNKNOWN";

my $status = `$bindir/fred_status -k $key`;
chomp $status;
$status =~ s/\s.*//;
die "fred_plot_data: bad status: $status\n" if $status ne "FINISHED";

my $reportsdir = "$FRED/RESULTS/JOB/$id/DATA/REPORTS";
system "cat $reportsdir/$x.dat";
exit;


sub check_varlist {
  my $v = shift;
  my @args = ();
  my %mapping = (C=>'C', S=>'S', E=>'E', I=>'I', R=>'R', s=>'I_s', M=>'M', A=>'AR', c=>'CI', r=>'RR', m=>'SM');
  my @vars = split "", $v;
  for my $x (@vars) {
    if (exists $mapping{$x}) {
      push @args, $mapping{$x};
    }
    else {
      print "bad arg: |$x|\n";
      die "usage: fred_plot_data -k key -v [S|E|I|R|s|C|c|M|A|r|m]\n";
    }
  }
  return @args;
}


