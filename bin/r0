#!/usr/bin/perl
my ($runs) = @ARGV;
$runs = 1000 if not $runs;
`ch runs $runs params.r0`;
`rm -f OUT/*`;
`SYNDEM params.r0 > syn-r0.out`;
my @inf = ();
for my $n (1..$runs) {
  push @inf, `wc -l OUT/trace$n.txt | awk '{printf "%d", \$1 - 1}'`;
}
open FH, ">r0.txt";
print FH "$_\n" for @inf;
close FH;
my ($ave, $std) = get_stats_from_column(0, @inf);
printf "%.2f %.2f\n", $ave, $std;
exit;

sub get_stats_from_column {
  my ($j, @a) = @_;
  my $n = scalar @a;
  my $sum = 0;
  my $sumsq = 0;
  for (my $i = 0; $i < $n; $i++) {
    my @b = split " ", $a[$i];
    my $x = $b[$j];
    $sum += $x;
    $sumsq += $x*$x;
  }
  my $std = 0;
  my $ave = 0;
  $ave = $sum / $n if $n;
  $std = sqrt(($n*$sumsq - $sum*$sum)/($n*($n-1))) if $n>1;
  return ($ave, $std);
}
