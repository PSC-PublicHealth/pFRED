#!/usr/bin/perl
use strict;
use warnings;
use Env;
use Getopt::Std;

# File: fred_delete
# Author: John Grefenstette
# Created: Sep 28, 2010

my $FRED = $ENV{FRED_HOME};
die "fred_delete: Please set environmental variable FRED_HOME to location of FRED home directory\n" if not $FRED;

# get command line arguments
my %options = ();
getopts("fk:", \%options);
my $force = exists $options{f};
my $key = "";
$key = $options{k} if exists $options{k};
my $dir = "$FRED/RESULTS";
die "Can't find directory $dir\n" if not -d $dir;
my $id = get_id($key);
die "KEY $key NOT FOUND\n" if $id eq "";
print "KEY = $key  JOB = $id\n";
my $response;
if ($force) {
  $response = "yes";
}
else {
  print "You are about to delete $dir/JOB/$id. This cannot be undone.\n";
  print "Proceed? yes/no [no]\n";
  $response = <>;
}
if ($response =~ /^y|yes/i) {
  delete_key($key);
  system "rm -rf $dir/JOB/$id";
  print "$dir/JOB/$id deleted\n";
}
else {
  print "cancelled\n";
}
exit;

sub get_id {
  my $mykey = shift;
  open FH, "$dir/KEY" or die "Can't find $dir/KEY\n";
  while (<FH>) {
    chomp;
    my ($key, $id) = split;
    if (defined $key and $key eq $mykey) {
      close FH;
      return $id;
    }
  }
  close FH;
  return "";
}

sub delete_key {
  my $mykey = shift;
  open FH, "$dir/KEY" or die "Can't find $dir/KEY\n";
  my $file = "tmp$$";
  open TMP, ">$file" or die "Can't open temp file $file\n";
  while (<FH>) {
    chomp;
    my ($key, $id) = split;
    print TMP "$key $id\n" if (defined $key and $key ne $mykey);
  }
  close FH;
  close TMP;
  system "mv $file $dir/KEY";
}


