#!/usr/bin/perl
use strict;
use warnings;
use Env;

# use DBI;

# File: run_fred
# Author: John Grefenstette
# Created: Jan 12, 2010
# Updated: Mar 4, 2010

# create RESULTS directory if needed
if (not -d "RESULTS") {
  mkdir "RESULTS" or die "Can't create RESULTS directory\n";
}

# create RESULTS/EXP directory if needed
if (not -d "RESULTS/EXP") {
  mkdir "RESULTS/EXP" or die "Can't create RESULTS/EXP directory\n";
}

# create RESULTS/ID file if needed
if (not -e "RESULTS/ID") {
  open FH, ">RESULTS/ID" or die "Can't create file RESULTS/ID\n";
  print FH "1\n";
  close FH;
}

# get index for this experiment
open FH, "RESULTS/ID" or die "Can't read RESULTS/ID\n";
my $id = <FH>;
chomp $id;
# print "id = |$id|\n";
close FH;
my $new_id = $id + 1;
open FH, ">RESULTS/ID";
print FH "$new_id\n";
close FH;

my $dir = "RESULTS/EXP/$id";
mkdir $dir or die "Can't make directory $dir\n";

my $meta = "$dir/META";
mkdir $meta or die "Can't make directory $meta\n";

my $data = "$dir/DATA";
mkdir $data or die "Can't make directory $data\n";

my $out = "$data/OUT";
mkdir $out or die "Can't make directory $out\n";

my $datefile = "$meta/DATE";
system "date > $datefile"; 

my $userfile = "$meta/USER";
my $user = $ENV{USER};
system "echo $user > $userfile";

system "hostname > $meta/WHERE";

my ($params) = @ARGV;
$params = "params" if not $params;

system "cp $params params_tmp.$id";
$params = "params_tmp.$id";

system "./ch outfile $out/out $params > /dev/null";
system "./ch tracefile $out/trace $params > /dev/null";

my $cmd = "./FRED @ARGV";
$cmd =~ s/ *$//;
# print "|$cmd|\n";

my $cmdfile = "$meta/COMMAND";
system "echo $cmd > $cmdfile"; 

my $version = "$meta/VERSION";
mkdir $version or die "Can't make directory $version\n";
system "cp -p Makefile profiles.txt *.cc *.h params* p ch go report test_* LICENSE sim.plt $version";

my $logfile = "$meta/LOG";
$cmd = "./fred $params > $logfile";

system "$cmd";
unlink $params;

print "$id\n";

exit;

